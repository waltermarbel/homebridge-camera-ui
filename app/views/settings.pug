extends layout

block head
  link(rel='stylesheet' href='/stylesheets/modules/bootstrap-select.min.css' type='text/css')

block content
  body(style="display: none")
    audio#soundFx
      source(src="/sounds/notification.wav")
    #inputPopup.modal.fade(tabindex="-1" role="dialog" aria-labelledby="inputPopupLabel" aria-hidden="true")
      .modal-dialog.modal-dialog-centered(role="document")
        .modal-content
          .modal-header
            h5#inputPopupLabel.modal-title
            button.close(type="button" data-dismiss="modal" aria-label="Close")
              span(aria-hidden="true") ×
          .modal-body
            input.form-control.form-control(type="text", id="popupTxt")
    #confirmPopup.modal.fade(tabindex="-1" role="dialog" aria-labelledby="confirmPopupTitle" aria-hidden="true")
      .modal-dialog.modal-dialog-centered(role="document")
        .modal-content
          .modal-header
            h5#confirmPopupTitle.modal-title=t('views.settings.reset_confirm')
            button.close(type="button" data-dismiss="modal" aria-label=t('views.settings.reset_btn_close'))
              span(aria-hidden="true") ×
          .modal-body
            span=t('views.settings.reset_info')
          .modal-footer
            button.btn.btn-secondary(type="button" data-dismiss="modal")=t('views.settings.reset_btn_close')
            button#confirmReset.btn.logout(type="button")=t('views.settings.reset_btn_reset')
    a#nb-dialog-container.mt-save-s(href="#", data-rel="lightcase")
      .nb-dialog-box
        .nb-background-blur
        .nb-header
          .nb-contents
            .nb-left
              i.fa.fa-bell.text-color-pink
              span=' ' + t('banner.title')
            .nb-right 
        .nb-contents.nb-main-content
          strong#nbcontenttitle
            | Camera
          br
          span#nbcontent
    #loading.d-flex.h-100max.w-100.justify-content-center.align-content-center(style='display: none!important;')
      h4.loading-title.mt-save
        b=t('views.logout.title') + ','
        br
        span=t('views.logout.undertitle') + '...'
      .row.w-100.d-flex.justify-content-center.align-content-center
        .w-100.d-flex.justify-content-center
          img#userpic-black(src=photo, alt=username)
        .w-100.d-flex.justify-content-center.mt-3
          h3#usertitle-black.profile-title-black= username
        .w-100.d-flex.justify-content-center
          p#userrole-black.profile-role-black= role
      .loading-circle
        .lds-ring
          div
          div
          div
          div
    main#main
      nav#header.navbar.fixed-top.navbar-light.white-nav-inner
        .container.position-relative
          .navbar-brand 
            #contentImg
              img(src="/images/web/logo_transparent-256.png", width="45", height="45", alt="Logo")
              a.nav-header-title2(href="/dashboard", target="_self")=t('views.settings.title')
          .nav-desk
            ul
              li.nav-item
                a.nav-link.smoothLink(href="/dashboard")=t('navigation.dashboard') 
              if role !== 'User'
                li.nav-item
                  a.nav-link.smoothLink(href="/cameras")=t('navigation.cameras')
                li.nav-item
                  a.nav-link.smoothLink(href="/recordings")=t('navigation.recordings')
                li.nav-item
                  a.nav-link.smoothLink(href="/notifications")=t('navigation.notifications')
                    span.notbadge.badge.badge-light.ml-2= not_size
              li.nav-item.active
                a.nav-link.smoothLink(href="/settings")=t('navigation.settings')
              li.nav-item.camview
                a.nav-link.smoothLink(href="/camviews")=t('navigation.camviews')
              if !noAuth
                li.nav-item.logout
                  a.nav-link(href=is_phone?"#":"/logout" id=is_phone?"logoutBtn":"logout")=t('navigation.logout')
          button.navbar-toggler(aria-label="Toggler")
            span#togglebutton.navbar-toggler-icon
            #navbarNavCustom.container.collapse.navbar-collapse.red-collapse.hidenavi(style="display: none")
              ul.navbar-nav.navbar-red
                li.nav-item-placeholder
                li.nav-item
                  a.nav-link.smoothLink(href="/dashboard")=t('navigation.dashboard')
                if role !== 'User'
                  li.nav-item
                    a.nav-link.smoothLink(href="/cameras")=t('navigation.cameras')
                  li.nav-item
                    a.nav-link.smoothLink(href="/recordings")=t('navigation.recordings')
                  li.nav-item
                    a.nav-link.smoothLink(href="/notifications")=t('navigation.notifications')
                      span.notbadge.badge.badge-light.ml-2= not_size
                li.nav-item.active
                  a.nav-link.smoothLink(href="/settings")=t('navigation.settings')
                if !noAuth
                  li.nav-item
                    a.nav-link(href=is_phone?"#":"/logout" id=is_phone?"logoutBtn":"logout")=t('navigation.logout')
                li.nav-item
                  a.nav-link.camview-nav-item.smoothLink(href="/camviews")=t('navigation.camviews')
            #blackoverlay.mobile-nav-overly.hidebg(style="display: none")
      .d-block.h-100vh.fix-body-top-inner
        section#settings-nav.breadcrumbs-settings.w-100.h-100.d-flex.justify-content-center
          .container.breadcrumb-height
            - roleClass = "justify-content-between"
            if role !== 'Master'
              - roleClass = ""
            .row.d-flex.align-items-center.p-2.horizontal-btn-direction-settings(class=roleClass)
              if !noAuth
                a.m-1.btn.btn-settings.scrollitem.subActive(href='#profile')=t('views.settings.subnavigation.profile')
                a.m-1.btn.btn-settings.scrollitem(href='#general')=t('views.settings.subnavigation.general')
              else
                a.m-1.btn.btn-settings.scrollitem.subActive(href='#general')=t('views.settings.subnavigation.general')
              if role === 'Master'
                a.m-1.btn.btn-settings.scrollitem(href='#dashboard')=t('views.settings.subnavigation.dashboard')
                a.m-1.btn.btn-settings.scrollitem(href='#cameras')=t('views.settings.subnavigation.cameras')
                a.m-1.btn.btn-settings.scrollitem(href='#recordings')=t('views.settings.subnavigation.recordings')
                a.m-1.btn.btn-settings.scrollitem(href='#notifications')=t('views.settings.subnavigation.notifications')
                a.m-1.btn.btn-settings.scrollitem(href='#camview')=t('views.settings.subnavigation.camviews')
                a.m-1.btn.btn-settings.scrollitem(href='#webhook')=t('views.settings.subnavigation.webhook')
        #settings.container-fluid.mt-breadcrumb-settings
          form#settingsForm.wrapper.d-flex.row.w-100.m-0.p-0.horizontal(method='post', enctype="multipart/form-data")
            if !noAuth
              #profile.page.col-12.p-0
                .innerContainer
                  .container.mbc-30
                    .row
                      .col-12.col-md-3.mb-5
                        .settings-box.text-center.p-3
                          #profile-container
                            image#profileImage.userpic-black(src=photo, alt="User")
                            h3.profile-title-black.mt-3= username
                            p.profile-role-black= role
                          input#imageUpload(type="file", name="photo", placeholder="Photo", required="", accept="image/png,image/jpeg")
                        if role === 'Master'
                          a#resetSettings.d-block.logout.w-100.m-0.p-2.mt-3.text-center(href="#", target="_self")=t('views.settings.reset')
                      .col-12.col-md-9.break-text
                        #account.col-12.settings-box.settings-box-account
                          h2=t('views.settings.views.profile.account_title')
                          p=t('views.settings.views.profile.account_undertitle')
                          .col-12
                            .settings-box-account-form
                              .form-group
                                label=t('views.settings.views.profile.account_name')
                                  input#adminUsername.form-control.form-control(type="text", name="admin[username]", value=username)
                              if role === 'Master'
                                .form-group.mt-3.d-flex.justify-content-end
                                  label=t('views.settings.views.profile.account_signout')
                                    select.custom-select.custom-select(name="profile[logoutTimer]")
                                      if settings.profile.logoutTimer === '1'
                                        option(value="1" selected) 1
                                      else
                                        option(value="1") 1
                                      if settings.profile.logoutTimer === '3'
                                        option(value="3" selected) 3
                                      else
                                        option(value="3") 3
                                      if settings.profile.logoutTimer === '6'
                                        option(value="6" selected) 6
                                      else
                                        option(value="6") 6
                                      if settings.profile.logoutTimer === '9'
                                        option(value="9" selected) 9
                                      else
                                        option(value="9") 9
                                      if settings.profile.logoutTimer === '12'
                                        option(value="12" selected) 12
                                      else
                                        option(value="12") 12
                                      if settings.profile.logoutTimer === '24'
                                        option(value="24" selected) 24
                                      else
                                        option(value="24") 24
                                      if settings.profile.logoutTimer === "Never"
                                        option(value="Never" selected)=t('views.settings.select_never')
                                      else
                                        option(value="Never")=t('views.settings.select_never')
                        #password.col-12.settings-box.settings-box-account.mt-5.position-relative
                          .bubble3(style="display:none")
                          h2=t('views.settings.views.profile.password_title')
                          p=t('views.settings.views.profile.password_undertitle')
                          .col-12
                            .settings-box-account-form
                              .form-group
                                label=t('views.settings.views.profile.password_old')
                                  input.form-control.form-control(type="password", autocomplete="new-password", name="password[old]")
                              .form-group.mt-4
                                label=t('views.settings.views.profile.password_new')
                                  input.form-control.form-control(type="password", autocomplete="new-password", name="password[new]")
                              .form-group.mt-4
                                label=t('views.settings.views.profile.password_confirm')
                                  input.form-control.form-control(type="password", autocomplete="new-password", name="password[confirm]")
                        if role === 'Master'
                          #user.col-12.settings-box.settings-box-account.mt-5
                            h2=t('views.settings.views.profile.user_title')
                            p=t('views.settings.views.profile.user_undertitle')
                            .col-12
                              .settings-box-account-form
                                #users
                                  .customUser.mb-5.pb-5.adduser-border
                                    h3=t('views.settings.views.profile.user_new')
                                    .form-group.mt-4
                                      label=t('views.settings.views.profile.user_new_name')
                                        input#userName.form-control.form-control(type="text", placeholder=t('views.settings.views.profile.user_new_username'), data-name=t('views.settings.views.profile.user_new_username'), data-container="body" data-toggle="popover" data-placement="top" data-content=t('views.settings.views.profile.invalid_username'))
                                    .form-group.mt-4
                                      label=t('views.settings.views.profile.user_new_password')
                                        input#userPassword.form-control.form-control(type="password", placeholder='*********', data-name=t('views.settings.views.profile.user_new_password'))
                                    .form-group.mt-3.mb-0
                                      label=t('views.settings.views.profile.user_new_role')
                                        select#userRoles.custom-select.custom-select
                                          option(value="admin", selected) Administrator
                                          option(value="user") User
                                    .d-flex.justify-content-end
                                      #addUser.btn.btn-success.mt-3=t('views.settings.views.profile.user_new_add')
                                  each userEntry, index in users
                                    if userEntry.role !== 'Master'
                                      - user = userEntry
                                      - id = userEntry.username.replace(/\s/g,"");
                                      .customUser.mb-5(id=id)
                                        i.removeUser.fa.fa-minus-circle.text-color-pink.mr-2(data-target=id)
                                        h4.text-color-pink.d-inline= user.username
                                        .form-group.mb-0.mt-4
                                          label
                                            input.form-control.form-control(name="users[" + id + "][name]" type="hidden" value=user.name)
                                        .form-group.mb-0.mt-2
                                          label=t('views.settings.views.profile.user_new_password')
                                            input.form-control.form-control(value="*********" name="users[" + id + "][password]" readonly="")
                                        .form-group.mb-0.mt-2
                                          label=t('views.settings.views.profile.user_new_role')
                                            input.form-control.form-control(value=user.role name="users[" + id + "][role]" readonly="")
            if role === 'Master' || (role !== 'Master' && !theme)
            #general.page.col-12.p-0
                .innerContainer
                  if role === 'Master'
                    .container.mbc-40
                      h3.settings-box-title=t('views.settings.views.general.title')
                      ul.settings-box.w-100
                        li.row.m-0.p-0.justify-content-center.break-text.pt-1.pb-1
                          .col-8
                            i.fas.fa-info-circle.popover-dismiss(tabindex="0" data-toggle="popover" data-placement="bottom" data-trigger="hover" title=t('views.settings.views.general.athome') data-content=t('views.settings.views.general.athome_info'))
                            span=' ' + t('views.settings.views.general.athome') 
                          .col-4.text-right.text-color-pink
                            label.form-switch.m-0
                              if settings.general.atHome
                                input(type="checkbox", name="general[atHome]", checked)
                              else
                                input(type="checkbox", name="general[atHome]")
                              i
                        li.row.m-0.p-0.justify-content-center.break-text.pt-1.pb-1
                          .col-7
                            i.fas.fa-info-circle.popover-dismiss(tabindex="0" data-toggle="popover" data-placement="bottom" data-trigger="hover" title=t('views.settings.views.general.exclude') data-content=t('views.settings.views.general.exclude_info'))
                            span=' ' + t('views.settings.views.general.exclude') 
                          .col-5.text-right.text-color-pink
                            .form-group.mt-3.mb-0
                              label
                                select.selectpicker(name="general[exclude][]", multiple, data-selected-text-format="count")
                                  each cam in Object.keys(settings.cameras)
                                    - found = false
                                    for entry in settings.general.exclude
                                      if cam === entry
                                        option(selected)= cam
                                        - found = true
                                    if !found
                                      option= cam
                  if !theme
                    .container.mbc-40
                      h3.settings-box-title=t('views.settings.views.general.themes_title')
                      ul.settings-box.w-100
                        li.row.m-0.p-0.justify-content-center.break-text.pt-1.pb-1
                          .col-8=t('views.settings.views.general.themes_darkmode')
                          .col-4.text-right.text-color-pink
                            label.form-switch.m-0.darkmode-switch
                              input(type="checkbox", name="general[darkmode]")
                              i
                        li.row.m-0.p-0.justify-content-center.break-text.pt-1.pb-1
                          .col-5=t('views.settings.views.general.themes_themes')
                          .col-7.text-right.text-color-pink.position-relative
                            input#switch-pink.theme-switches.switch-pink(type="radio", name="themes-group")
                            label(for="switch-pink")
                            input#switch-blue.theme-switches.switch-blue(type="radio", name="themes-group")
                            label(for="switch-blue")
                            input#switch-yellow.theme-switches.switch-yellow(type="radio", name="themes-group")
                            label(for="switch-yellow")
                            input#switch-green.theme-switches.switch-green(type="radio", name="themes-group")
                            label(for="switch-green")
                            input#switch-gray.theme-switches.switch-gray(type="radio", name="themes-group")
                            label(for="switch-gray")
                  if role === 'Master'
                    .container.mbc-40
                      h3.settings-box-title=t('views.settings.views.general.rooms_title')
                      ul#rooms.settings-box.w-100
                        li.row.m-0.p-0.justify-content-center.break-text.mt-1.pt-1.pb-1
                          .col-8
                            .form-group.m-0.w-100.mb-2
                              label
                                input#roomName.form-control.form-control(type="text", data-toggle='popover', placeholder=t('views.settings.views.general.rooms_name'), data-name=t('views.settings.views.general.rooms_name'))
                          .col-4.text-right.text-success
                            i#addRoom.fa.fa-plus-circle
                        for room in settings.general.rooms
                          - id = room.replace(/\s/g,"");
                          li.row.m-0.p-0.justify-content-center.break-text.pt-1.pb-1(id=id)
                            if room !== 'Standard'
                              .col-8= room
                                input.form-control(type="hidden", name="general[rooms][]", value=room)
                              .col-4.text-right.text-color-pink
                                i.fa.fa-minus-circle.removeRoom(data-target=room)
                            else
                              .col= room
                                input.form-control(type="hidden", name="general[rooms][]", value=room)
            if role === 'Master'
              #dashboard.page.col-12.p-0
                .innerContainer
                  .container.mbc-40
                    h3.settings-box-title=t('views.settings.views.dashboard.title')
                    ul.settings-box.w-100
                      li.row.m-0.p-0.justify-content-center.break-text.pt-1.pb-1
                        .col-8
                          i.fas.fa-info-circle.popover-dismiss(tabindex="0" data-toggle="popover" data-placement="bottom" data-trigger="hover" title=t('views.settings.views.dashboard.timer') data-content=t('views.settings.views.dashboard.timer_info'))
                          span=' ' + t('views.settings.views.dashboard.timer')
                        .col-4.text-right.text-color-pink
                          .form-group.mt-3.d-flex.justify-content-end
                            label
                              select.custom-select.custom-select(name="dashboard[refreshTimer]")
                                if settings.dashboard.refreshTimer === '10'
                                  option(value="10" selected) 10
                                else
                                  option(value="10") 10
                                if settings.dashboard.refreshTimer === '20'
                                  option(value="20" selected) 20
                                else
                                  option(value="20") 20
                                if settings.dashboard.refreshTimer === '30'
                                  option(value="30" selected) 30
                                else
                                  option(value="30") 30
                                if settings.dashboard.refreshTimer === '40'
                                  option(value="40" selected) 40
                                else
                                  option(value="40") 40
                                if settings.dashboard.refreshTimer === '50'
                                  option(value="50" selected) 50
                                else
                                  option(value="50") 50
                                if settings.dashboard.refreshTimer === '60'
                                  option(value="60" selected) 60
                                else
                                  option(value="60") 60
                  .container.mbc-40
                    h3.settings-box-title=t('views.settings.views.dashboard.title_cameras')
                    each cam in Object.keys(settings.dashboard.cameras)
                      - active = settings.dashboard.cameras[cam].active
                      - livestream = settings.dashboard.cameras[cam].livestream
                      .card-header= cam
                      .col-12.notification-deck.living.mb-5.add-shadow(data-filterable='yes')
                        .row.justify-content-center.pb-3.bbottom-1.m-0
                          .col-9
                            i.fas.fa-info-circle.popover-dismiss(tabindex="0" data-toggle="popover" data-placement="bottom" data-trigger="hover" title=t('views.settings.views.dashboard.favourite') data-content=t('views.settings.views.dashboard.favourite_info'))
                            span=' ' + t('views.settings.views.dashboard.favourite')
                          .col-3.text-right
                            label.form-switch.m-0
                              if active
                                input(type="checkbox", name='dashboard[cameras][' + cam + '][active]', checked)
                              else
                                input(type="checkbox", name='dashboard[cameras][' + cam + '][active]')
                              i
                        .row.justify-content-center.pb-3.pt-3.m-0
                          .col-9
                            i.fas.fa-info-circle.popover-dismiss(tabindex="0" data-toggle="popover" data-placement="bottom" data-trigger="hover" title=t('views.settings.views.dashboard.livestream') data-content=t('views.settings.views.dashboard.livestream_info'))
                            span=' ' + t('views.settings.views.dashboard.livestream')
                          .col-3.text-right.text-color-pink
                            label.form-switch.m-0
                              if livestream
                                input(type="checkbox", name='dashboard[cameras][' + cam + '][livestream]', checked)
                              else 
                                input(type="checkbox", name='dashboard[cameras][' + cam + '][livestream]')
                              i
              #cameras.page.col-12.p-0
                .innerContainer
                  .container.mbc-40
                    h4.settings-box-title=t('views.settings.views.cameras.title')
                    each camEntry in Object.keys(settings.cameras)
                      - info = settings.cameras[camEntry].info
                      - room = settings.cameras[camEntry].room
                      - resolution = settings.cameras[camEntry].resolutions
                      - audio = settings.cameras[camEntry].audio
                      .card.mb-5
                        h5.card-header= camEntry
                        .card-body
                          .container.p-3
                            h5.card-title=t('views.settings.views.cameras.info')
                            .form-group.mt-3
                              label
                                textarea.form-control(rows="3", name='cameras[' + camEntry + '][info]')= info
                            h5.card-title=t('views.settings.views.cameras.room')
                            .form-group.mt-3
                              label
                                select.availableRooms.custom-select.custom-select(name='cameras[' + camEntry + '][room]')
                                  for roomEntry in settings.general.rooms
                                    if room === roomEntry
                                      option(value=roomEntry, selected)= roomEntry
                                    else
                                      option(value=roomEntry)= roomEntry
                            h5.card-title=t('views.settings.views.cameras.video')
                            .form-group.mt-3
                              label
                                select.custom-select.custom-select(name='cameras[' + camEntry + '][resolutions]')
                                  if resolution === '256x144'
                                    option(value="256x144" selected) 144p
                                  else
                                    option(value="256x144") 144p
                                  if resolution === '426x240'
                                    option(value="426x240" selected) 240p
                                  else
                                    option(value="426x240") 240p
                                  if resolution === '480x360'
                                    option(value="480x360" selected) 360p
                                  else
                                    option(value="480x360") 360p
                                  if resolution === '640x480'
                                    option(value="640x480" selected) 480p
                                  else
                                    option(value="640x480") 480p
                                  if resolution === '1280x720'
                                    option(value="1280x720" selected) 720p
                                  else
                                    option(value="1280x720") 720p
                                  if resolution === '1920x1080'
                                    option(value="1920x1080" selected) 1080p
                                  else
                                    option(value="1920x1080") 1080p
                            .row.m-0.p-0.justify-content-center.break-text.pt-1.pb-1
                              .col-8.pl-0.card-title=t('views.settings.views.cameras.audio')
                              .col-4.text-right.text-color-pink.pr-0
                                label.form-switch.m-0
                                  if audio
                                    input(type="checkbox", name='cameras[' + camEntry + '][audio]', checked)
                                  else 
                                    input(type="checkbox", name='cameras[' + camEntry + '][audio]')
                                  i.mr-0
              #recordings.page.col-12.p-0
                .innerContainer
                  .container.mbc-40
                    h3.settings-box-title=t('views.settings.views.recordings.title')
                    ul.settings-box.w-100
                      li.row.m-0.p-0.justify-content-center.break-text.pt-1.pb-1
                        .col-8
                          i.fas.fa-info-circle.popover-dismiss(tabindex="0" data-toggle="popover" data-placement="bottom" data-trigger="hover" title=t('views.settings.views.recordings.active') data-content=t('views.settings.views.recordings.active_info'))
                          span=' ' + t('views.settings.views.recordings.active')
                        .col-4.text-right.text-color-pink
                          label.form-switch.m-0
                            if settings.recordings.active
                              input(type="checkbox", name="recordings[active]", checked)
                            else 
                              input(type="checkbox", name="recordings[active]")
                            i
                      li.row.m-0.p-0.justify-content-center.break-text.pt-1.pb-1
                        .col-8
                          i.fas.fa-info-circle.popover-dismiss(tabindex="0" data-toggle="popover" data-placement="bottom" data-trigger="hover" title=t('views.settings.views.recordings.type') data-content=t('views.settings.views.recordings.type_info'))
                          span=' ' + t('views.settings.views.recordings.type')
                        .col-4.text-right.text-color-pink
                          .form-group.mt-3.d-flex.justify-content-end
                            label
                              select.custom-select.custom-select(name="recordings[type]")
                                if settings.recordings.type === 'Snapshot'
                                  option(value="Snapshot" selected) Snapshot
                                else
                                  option(value="Snapshot")=t('views.settings.views.recordings.type_snapshot')
                                if settings.recordings.type === 'Video'
                                  option(value="Video" selected)=t('views.settings.views.recordings.type_video')
                                else
                                  option(value="Video")=t('views.settings.views.recordings.type_video')
                      li.row.m-0.p-0.justify-content-center.break-text.pt-1.pb-1
                        .col-8
                          i.fas.fa-info-circle.popover-dismiss(tabindex="0" data-toggle="popover" data-placement="bottom" data-trigger="hover" title=t('views.settings.views.recordings.timer') data-content=t('views.settings.views.recordings.timer_info'))
                          span=' ' + t('views.settings.views.recordings.timer')
                        .col-4.text-right.text-color-pink
                          .form-group.mt-3.d-flex.justify-content-end
                            label
                              select.custom-select.custom-select(name="recordings[timer]")
                                if settings.recordings.timer === '10'
                                  option(value="10" selected) 10
                                else
                                  option(value="10") 10
                                if settings.recordings.timer === '20'
                                  option(value="20" selected) 20
                                else
                                  option(value="20") 20
                                if settings.recordings.timer === '30'
                                  option(value="30" selected) 30
                                else
                                  option(value="30") 30
                                if settings.recordings.timer === '40'
                                  option(value="40" selected) 40
                                else
                                  option(value="40") 40
                                if settings.recordings.timer === '50'
                                  option(value="50" selected) 50
                                else
                                  option(value="50") 50
                                if settings.recordings.timer === '60'
                                  option(value="60" selected) 60
                                else
                                  option(value="60") 60
                      li.row.m-0.p-0.justify-content-center.break-text.mt-1.pt-1.pb-1
                        .col-8
                          i.fas.fa-info-circle.popover-dismiss(tabindex="0" data-toggle="popover" data-placement="bottom" data-trigger="hover" title=t('views.settings.views.recordings.store') data-content=t('views.settings.views.recordings.store_info'))
                          span=' ' + t('views.settings.views.recordings.store')
                        .col-4.text-right.text-color-pink
                          .form-group.m-0.w-100.mb-2
                            label
                              input.form-control.form-control(type="text", placeholder=t('views.settings.views.recordings.store'), name="recordings[path]", value=settings.recordings.path, data-name=t('views.settings.views.recordings.store'))
                      li.row.m-0.p-0.justify-content-center.break-text.pt-1.pb-1
                        .col-8
                          i.fas.fa-info-circle.popover-dismiss(tabindex="0" data-toggle="popover" data-placement="bottom" data-trigger="hover" title=t('views.settings.views.recordings.remove') data-content=t('views.settings.views.recordings.remove_info'))
                          span=' ' + t('views.settings.views.recordings.remove')
                        .col-4.text-right.text-color-pink
                          .form-group.mt-3.d-flex.justify-content-end
                            label
                              select.custom-select.custom-select(name="recordings[removeAfter]")
                                if settings.recordings.removeAfter === '1'
                                  option(value="1" selected) 1
                                else
                                  option(value="1") 1
                                if settings.recordings.removeAfter === '3'
                                  option(value="3" selected) 3
                                else
                                  option(value="3") 3
                                if settings.recordings.removeAfter === '5'
                                  option(value="5" selected) 5
                                else
                                  option(value="5") 5
                                if settings.recordings.removeAfter === '7'
                                  option(value="7" selected) 7
                                else
                                  option(value="7") 7
                                if settings.recordings.removeAfter === '10'
                                  option(value="10" selected) 10
                                else
                                  option(value="10") 10
                                if settings.recordings.removeAfter === 'Never'
                                  option(value="Never" selected)=t('views.settings.select_never')
                                else
                                  option(value="Never")=t('views.settings.select_never')
              #notifications.page.col-12.p-0
                .innerContainer
                  .container.mbc-40
                    h3.settings-box-title=t('views.settings.views.notifications.title')
                    ul.settings-box.w-100
                      li.row.m-0.p-0.justify-content-center.break-text.pt-1.pb-1
                        .col-8
                          i.fas.fa-info-circle.popover-dismiss(tabindex="0" data-toggle="popover" data-placement="bottom" data-trigger="hover" title=t('views.settings.views.notifications.remove') data-content=t('views.settings.views.notifications.remove_info'))
                          span=' ' + t('views.settings.views.notifications.remove')
                        .col-4.text-right.text-color-pink
                          .form-group.mt-3.d-flex.justify-content-end
                            label
                              select.custom-select.custom-select(name="notifications[clearTimer]")
                                if settings.notifications.clearTimer === '1'
                                  option(value="1" selected) 1
                                else
                                  option(value="1") 1
                                if settings.notifications.clearTimer === '2'
                                  option(value="2" selected) 2
                                else
                                  option(value="2") 2
                                if settings.notifications.clearTimer === '3'
                                  option(value="3" selected) 3
                                else
                                  option(value="3") 3
                                if settings.notifications.clearTimer === '4'
                                  option(value="4" selected) 4
                                else
                                  option(value="4") 4
                                if settings.notifications.clearTimer === '5'
                                  option(value="5" selected) 5
                                else
                                  option(value="5") 5
                                if settings.notifications.clearTimer === '6'
                                  option(value="6" selected) 6
                                else
                                  option(value="6") 6
                                if settings.notifications.clearTimer === 'Never'
                                  option(value="Never" selected)=t('views.settings.select_never')
                                else
                                  option(value="Never")=t('views.settings.select_never')
                      li.row.m-0.p-0.justify-content-center.break-text.pt-1.pb-1
                        .col-8
                          i.fas.fa-info-circle.popover-dismiss(tabindex="0" data-toggle="popover" data-placement="bottom" data-trigger="hover" title=t('views.settings.views.notifications.remove_banner') data-content=t('views.settings.views.notifications.remove_banner_info'))
                          span=' ' + t('views.settings.views.notifications.remove_banner')
                        .col-4.text-right.text-color-pink
                          .form-group.mt-3.d-flex.justify-content-end
                            label
                              select.custom-select.custom-select(name="notifications[clearBanner]")
                                if settings.notifications.clearBanner === '5'
                                  option(value="5" selected) 5
                                else
                                  option(value="5") 5
                                if settings.notifications.clearBanner === '10'
                                  option(value="10" selected) 10
                                else
                                  option(value="10") 10
                                if settings.notifications.clearBanner === '20'
                                  option(value="20" selected) 20
                                else
                                  option(value="20") 20
                                if settings.notifications.clearBanner === '30'
                                  option(value="30" selected) 30
                                else
                                  option(value="30") 30
                                if settings.notifications.clearBanner === 'Never'
                                  option(value="Never" selected)=t('views.settings.select_never')
                                else
                                  option(value="Never")=t('views.settings.select_never')
                  .container.mbc-40
                    h3.settings-box-title=t('views.settings.views.telegram.title')
                    ul.settings-box.w-100
                      li.row.m-0.p-0.justify-content-center.break-text.pt-1.pb-1
                        .col-8
                          i.fas.fa-info-circle.popover-dismiss(tabindex="0" data-toggle="popover" data-placement="bottom" data-trigger="hover" title=t('views.settings.views.telegram.active') data-content=t('views.settings.views.telegram.active_info'))
                          span=' ' + t('views.settings.views.telegram.active')
                        .col-4.text-right.text-color-pink
                          label.form-switch.m-0
                            if settings.telegram.active
                              input(type="checkbox", name="telegram[active]", checked)
                            else
                              input(type="checkbox", name="telegram[active]")
                            i
                      li.row.m-0.p-0.justify-content-center.break-text.mt-1.pt-1.pb-1
                        .col-8
                          i.fas.fa-info-circle.popover-dismiss(tabindex="0" data-toggle="popover" data-placement="bottom" data-trigger="hover" title=t('views.settings.views.telegram.token') data-content=t('views.settings.views.telegram.token_info'))
                          span=' ' + t('views.settings.views.telegram.token')
                        .col-4.text-right.text-color-pink
                          .form-group.m-0.w-100.mb-2
                            label
                              input.form-control.form-control(type="text", placeholder=t('views.settings.views.telegram.token'), name="telegram[token]", value=settings.telegram.token, data-name=t('views.settings.views.telegram.token'))
                      li.row.m-0.p-0.justify-content-center.break-text.mt-1.pt-1.pb-1
                        .col-8
                          i.fas.fa-info-circle.popover-dismiss(tabindex="0" data-toggle="popover" data-placement="bottom" data-trigger="hover" title=t('views.settings.views.telegram.chatid') data-content=t('views.settings.views.telegram.chatid_info'))
                          span=' ' + t('views.settings.views.telegram.chatid')
                        .col-4.text-right.text-color-pink
                          .form-group.m-0.w-100.mb-2
                            label
                              input.form-control.form-control(type="text", placeholder=t('views.settings.views.telegram.chatid'), name="telegram[chatID]", value=settings.telegram.chatID, data-name=t('views.settings.views.telegram.chatid'))
                      li.row.m-0.p-0.justify-content-center.break-text.mt-1.pt-1.pb-1
                        .col-8
                          i.fas.fa-info-circle.popover-dismiss(tabindex="0" data-toggle="popover" data-placement="bottom" data-trigger="hover" title=t('views.settings.views.telegram.motion_text') data-content=t('views.settings.views.telegram.motion_text_info'))
                          span=' ' + t('views.settings.views.telegram.motion_text')
                        .col-4.text-right.text-color-pink
                          .form-group.m-0.w-100.mb-2.mt-1
                            label
                              input.form-control.form-control(type="text", placeholder=t('views.settings.views.telegram.motion_text'), name="telegram[motionOn]", , value=settings.telegram.motionOn, data-name=t('views.settings.views.telegram.motion_text'))
                      each cam in Object.keys(settings.telegram.cameras)
                        - type = settings.telegram.cameras[cam].type
                        li.row.m-0.p-0.justify-content-center.break-text.pt-1.pb-1
                          .col-8
                            i.fas.fa-info-circle.popover-dismiss(tabindex="0" data-toggle="popover" data-placement="bottom" data-trigger="hover" title=cam + " Notificaiton Type" data-content=t('views.settings.views.telegram.type_info'))
                            |   !{cam}
                          .col-4.text-right.text-color-pink
                            .form-group.mt-3.d-flex.justify-content-center
                              label
                                select.custom-select.custom-select(name='telegram[cameras][' + cam + '][type]')
                                  if type === 'Text'
                                    option(value="Text" selected)=t('views.settings.views.telegram.type_text')
                                  else
                                    option(value="Text")=t('views.settings.views.telegram.type_text')
                                  if type === 'Snapshot'
                                    option(value="Snapshot" selected)=t('views.settings.views.telegram.type_snapshot')
                                  else
                                    option(value="Snapshot")=t('views.settings.views.telegram.type_snapshot')
                                  if type === 'Video'
                                    option(value="Video" selected)=t('views.settings.views.telegram.type_video')
                                  else
                                    option(value="Video")=t('views.settings.views.telegram.type_video')
                  .container.mbc-40
                    h3.settings-box-title=t('views.settings.views.webhook.title')
                    ul.settings-box.w-100
                      li.row.m-0.p-0.justify-content-center.break-text.pt-1.pb-1
                        .col-8
                          i.fas.fa-info-circle.popover-dismiss(tabindex="0" data-toggle="popover" data-placement="bottom" data-trigger="hover" title=t('views.settings.views.webhook.active') data-content=t('views.settings.views.webhook.active_info'))
                          span=' ' + t('views.settings.views.webhook.active')
                        .col-4.text-right.text-color-pink
                          label.form-switch.m-0
                            if settings.webhook.active
                              input(type="checkbox", name="webhook[active]", checked)
                            else
                              input(type="checkbox", name="webhook[active]")
                            i
                      
                      each cam in Object.keys(settings.webhook.cameras)
                        - endpoint = settings.webhook.cameras[cam].endpoints
                        li.row.m-0.p-0.justify-content-center.break-text.mt-1.pt-1.pb-1
                          .col-8
                            i.fas.fa-info-circle.popover-dismiss(tabindex="0" data-toggle="popover" data-placement="bottom" data-trigger="hover" title=t('views.settings.views.webhook.title_endpoint') data-content=t('views.settings.views.webhook.on_info'))
                            span=' ' + cam
                          .col-4.text-right.text-color-pink
                            .form-group.m-0.w-100.mb-2
                              label
                                input.form-control.form-control(type="text", placeholder="https://webhook.site/88e98f7e" name="webhook[cameras][" + cam + "][endpoint]", value=settings.webhook.cameras[cam].endpoint, data-name=t('views.settings.views.webhook.title_endpoint'))
              #camview.page.col-12.p-0
                .innerContainer
                  .container.mbc-40
                    h3.settings-box-title=t('views.settings.views.camviews.title')
                    ul.settings-box.w-100
                      li.row.m-0.p-0.justify-content-center.break-text.pt-1.pb-1
                        .col-8
                          i.fas.fa-info-circle.popover-dismiss(tabindex="0" data-toggle="popover" data-placement="bottom" data-trigger="hover" title=t('views.settings.views.camviews.timer') data-content=t('views.settings.views.camviews.timer_info'))
                          span=' ' + t('views.settings.views.camviews.timer')
                        .col-4.text-right.text-color-pink
                          .form-group.mt-3.d-flex.justify-content-end
                            label
                              select.custom-select.custom-select(name="camviews[refreshTimer]")
                                if settings.camviews.refreshTimer === '10'
                                  option(value="10" selected) 10
                                else
                                  option(value="10") 10
                                if settings.camviews.refreshTimer === '20'
                                  option(value="20" selected) 20
                                else
                                  option(value="20") 20
                                if settings.camviews.refreshTimer === '30'
                                  option(value="30" selected) 30
                                else
                                  option(value="30") 30
                                if settings.camviews.refreshTimer === '40'
                                  option(value="40" selected) 40
                                else
                                  option(value="40") 40
                                if settings.camviews.refreshTimer === '50'
                                  option(value="50" selected) 50
                                else
                                  option(value="50") 50
                                if settings.camviews.refreshTimer === '60'
                                  option(value="60" selected) 60
                                else
                                  option(value="60") 60
                  - activeCams = 0
                  each camEntry in Object.keys(settings.camviews.cameras)
                    if settings.camviews.cameras[camEntry]
                      - activeCams = activeCams + 1
                  .container.mbc-40
                    h3.settings-box-title=t('views.settings.views.camviews.title_cameras')
                    each camEntry in Object.keys(settings.camviews.cameras)
                      - active = settings.camviews.cameras[camEntry].active
                      - livestream = settings.camviews.cameras[camEntry].livestream
                      .card-header= camEntry
                      .col-12.notification-deck.living.mb-5.add-shadow(data-filterable='yes')
                        .row.justify-content-center.pb-3.bbottom-1.m-0
                          .col-9
                            i.fas.fa-info-circle.popover-dismiss(tabindex="0" data-toggle="popover" data-placement="bottom" data-trigger="hover" title=t('views.settings.views.camviews.favourite') data-content=t('views.settings.views.camviews.favourite_info'))
                            span=' ' + t('views.settings.views.camviews.favourite')
                          .col-3.text-right
                            label.form-switch.m-0
                              if active
                                input(type="checkbox", name='camviews[cameras][' + camEntry + '][active]', checked)
                              else
                                input(type="checkbox", name='camviews[cameras][' + camEntry + '][active]')
                              i
                        .row.justify-content-center.pb-3.pt-3.m-0
                          .col-9
                            i.fas.fa-info-circle.popover-dismiss(tabindex="0" data-toggle="popover" data-placement="bottom" data-trigger="hover" title=t('views.settings.views.camviews.livestream') data-content=t('views.settings.views.camviews.livestream_info'))
                            span=' ' + t('views.settings.views.camviews.livestream')
                          .col-3.text-right
                            label.form-switch.m-0
                              if livestream
                                input(type="checkbox", name='camviews[cameras][' + camEntry + '][livestream]', checked)
                              else 
                                input(type="checkbox", name='camviews[cameras][' + camEntry + '][livestream]')
                              i
              #webhook.page.col-12.p-0
                .innerContainer
                  .container.mbc-40
                    h3.settings-box-title=t('views.settings.views.webhook.title')
                    ul.settings-box.w-100
                      li.row.m-0.p-0.justify-content-center.break-text.pt-1.pb-1
                        .col-8=t('views.settings.views.webhook.status')
                        .col-4.text-right.text-success=t('views.settings.views.webhook.status_online')
                  .container.mbc-40
                    h3.settings-box-title=t('views.settings.views.webhook.title_endpoints')
                    ul.settings-box.w-100
                      li.row.m-0.p-0.justify-content-center.break-text.pt-1.pb-1
                        .col-12.no-border.settings-box-inner-title.text-white
                          span=' ' + t('views.settings.views.webhook.athome_endpoint')
                        .col
                          #athome_endpoints
                            .card.no-shadow
                              ul
                                li.row.m-0.p-0.justify-content-center.break-text.pt-1.pb-1.bbottom-1
                                  .col-4.text-left.p-1=t('views.settings.views.webhook.athome_on')
                                  .col-8.text-right.p-1 /interface?atHome=true&username=admin&password=admin
                                li.row.m-0.p-0.justify-content-center.break-text.pt-1.pb-1.bbottom-1
                                  .col-4.text-left.p-1=t('views.settings.views.webhook.athome_off')
                                  .col-8.text-right.p-1 /interface?atHome=false&username=admin&password=admin
                                li.row.m-0.p-0.justify-content-center.break-text.pt-1.pb-1
                                  .col-4.text-left.p-1=t('views.settings.views.webhook.athome_trigger')
                                  .col-8.text-right.p-1 /interface?atHome=trigger&username=admin&password=admin
                      li.row.m-0.p-0.justify-content-center.break-text.pt-1.pb-1.mt-2
                        .col-12.no-border.settings-box-inner-title.text-white
                          span=' ' + t('views.settings.views.webhook.exclude_endpoint')
                        .col
                          #exclude_endpoints
                            .card.no-shadow
                              ul
                                li.row.m-0.p-0.justify-content-center.break-text.pt-1.pb-1.bbottom-1
                                  .col-4.text-left.p-1=t('views.settings.views.webhook.exclude_add')
                                  .col-8.text-right.p-1 /interface?addExclude=CAMERA&username=admin&password=admin
                                li.row.m-0.p-0.justify-content-center.break-text.pt-1.pb-1.bbottom-1
                                  .col-4.text-left.p-1=t('views.settings.views.webhook.exclude_del')
                                  .col-8.text-right.p-1 /interface?delExclude=CAMERA&username=admin&password=admin
                                li.row.m-0.p-0.justify-content-center.break-text.pt-1.pb-1
                                  .col-4.text-left.p-1=t('views.settings.views.webhook.exclude_clear')
                                  .col-8.text-right.p-1 /interface?clearxclude=true&username=admin&password=admin 
                      li.row.m-0.p-0.justify-content-center.break-text.pt-1.pb-1.mt-2
                        .col-12.no-border.settings-box-inner-title.text-white
                          span=' ' + t('views.settings.views.webhook.settings_endpoint')
                        .col
                          #settings_endpoints
                            .card.no-shadow
                              ul
                                li.row.m-0.p-0.justify-content-center.break-text.pt-1.pb-1.bbottom-1
                                  .col-4.text-left.p-1=t('views.settings.views.webhook.settings_get')
                                  .col-8.text-right.p-1 /interface?getSettings&username=admin&password=admin
          .container.d-flex.justify-content-end.mb-5
            button.apply.form-apply.btn.logout.ml-0(type="button")=t('views.settings.apply')                       
block footscripts
  script(type='text/javascript' src='/javascripts/modules/jquery.serializeJSON.js' defer)
  script(type='text/javascript' src='/javascripts/modules/bootstrap-select.min.js' defer)
  script(type='text/javascript' src='/javascripts/views/settings.js' defer)
  
